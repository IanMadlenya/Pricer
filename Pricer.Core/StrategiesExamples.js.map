{"version":3,"sources":["../../Pricer.Core/StrategiesExamples.fs"],"names":[],"mappings":"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","file":"StrategiesExamples.js","sourcesContent":["ï»¿namespace Pricer.Core\r\n\r\nopen System\r\n\r\nmodule StrategiesExamples = \r\n\r\n    let testStrikes stock =\r\n        floor(stock.CurrentPrice*1.1),floor(stock.CurrentPrice*1.4)\r\n\r\n    let buildOptionLeg direction strike expiry kind = \r\n        {\r\n            Definition = Option {\r\n                Direction = direction\r\n                Strike = strike\r\n                Expiry = expiry\r\n                Kind = kind\r\n                Style = European\r\n                PurchaseDate = DateTime.Now\r\n            }\r\n            Pricing = None\r\n        }\r\n\r\n    let expiry = DateTime.Now.AddDays(60.0)\r\n    let strangle stock = \r\n        let strike1, strike2 = testStrikes stock\r\n        {\r\n            Name = \"Long Strangle\"\r\n            Legs = [ \r\n                    buildOptionLeg 1.0 strike1 expiry Call\r\n                    buildOptionLeg 1.0 strike2 expiry Put\r\n            ]\r\n            Stock = stock\r\n        }\r\n\r\n    let straddle stock = \r\n        let strike,_ = testStrikes stock\r\n        {\r\n            Name = \"Straddle\"\r\n            Legs = [ \r\n                    buildOptionLeg 1.0 strike expiry Call\r\n                    buildOptionLeg 1.0 strike expiry Put\r\n            ]\r\n            Stock = stock\r\n        }\r\n\r\n    let butterfly stock = \r\n        {\r\n            Name = \"Butterfly\"\r\n            Legs = [ \r\n                    buildOptionLeg 1.0 (stock.CurrentPrice*1.05) expiry Call\r\n                    buildOptionLeg -1.0 (stock.CurrentPrice*1.1) expiry Call\r\n                    buildOptionLeg -1.0 (stock.CurrentPrice*1.1) expiry Call\r\n                    buildOptionLeg 1.0 (stock.CurrentPrice*1.15) expiry Call\r\n            ]\r\n            Stock = stock\r\n        }\r\n\r\n    let riskReversal stock = \r\n        {\r\n            Name = \"Risk Reversal\"\r\n            Legs = [ \r\n                    //out of the money call\r\n                    buildOptionLeg 1.0 (stock.CurrentPrice*1.1) expiry Call\r\n                    //out of the money put\r\n                    buildOptionLeg -1.0 (stock.CurrentPrice*0.9) expiry Put\r\n            ]\r\n            Stock = stock\r\n        }\r\n\r\n    let collar stock = {\r\n            Name = \"Collar\"\r\n            Legs = [ \r\n                    //sell 1 out of money call\r\n                    buildOptionLeg -1.0 (stock.CurrentPrice*1.2) expiry Call\r\n                    //buy 1 out of money put\r\n                    buildOptionLeg 1.0 (stock.CurrentPrice*0.8) expiry Put\r\n                    //long some shares\r\n                    {\r\n                        Definition = Cash { \r\n                            Direction = 1.0\r\n                            Price = stock.CurrentPrice\r\n                        }\r\n                        Pricing = None\r\n                    }\r\n            ]\r\n            Stock = stock\r\n        }\r\n\r\n    let coveredCall stock = \r\n        {\r\n            Name = \"Covered Call\"\r\n            Legs = [ \r\n                    //sell 1 out of money call\r\n                    buildOptionLeg -1.0 (stock.CurrentPrice*1.2) expiry Call\r\n                    //long some shares\r\n                    {\r\n                        Definition = Cash { \r\n                            Direction = 1.0\r\n                            Price = stock.CurrentPrice\r\n                        }\r\n                        Pricing = None\r\n                    }\r\n            ]\r\n            Stock = stock\r\n        }\r\n\r\n    let cashPayOff strike ref = ref - strike\r\n\r\n    let condor stock = \r\n        let strike1 = floor(stock.CurrentPrice*0.6)\r\n        let strike2 = floor(stock.CurrentPrice*0.9)\r\n        let strike3 = floor stock.CurrentPrice*1.1\r\n        let strike4 = floor stock.CurrentPrice*1.4\r\n        {\r\n            Name = \"Condor\"\r\n            Legs = [ \r\n                    buildOptionLeg -1.0 strike2 expiry Call\r\n                    buildOptionLeg 1.0 strike1 expiry Call\r\n                    buildOptionLeg -1.0 strike3 expiry Call\r\n                    buildOptionLeg 1.0 strike4 expiry Call\r\n            ]\r\n            Stock = stock\r\n        }\r\n\r\n    let boxOption stock = \r\n        let strike1, strike2 = testStrikes stock\r\n        {\r\n            Name = \"Box Option\"\r\n            Legs = [ \r\n                    buildOptionLeg 1.0 strike1 expiry Call\r\n                    buildOptionLeg -1.0 strike2 expiry Call\r\n                    buildOptionLeg 1.0 strike2 expiry Call\r\n                    buildOptionLeg -1.0 strike1 expiry Call\r\n            ]\r\n            Stock = stock\r\n    }\r\n\r\n    let longCall stock = {\r\n        Name = \"Long Call - Out Of Money\"\r\n        Legs = [\r\n                buildOptionLeg 1.0 (stock.CurrentPrice*1.2) expiry Call\r\n        ]\r\n        Stock = stock\r\n    }\r\n\r\n    let shortCall stock = {\r\n        Name = \"Short Call - Out Of Money\"\r\n        Legs = [\r\n                buildOptionLeg -1.0 (stock.CurrentPrice*1.2) expiry Call\r\n        ]\r\n        Stock = stock\r\n    }\r\n\r\n    let callSpread stock = \r\n        let strike1,strike2 = testStrikes stock\r\n        {\r\n            Name = \"Bull Call Spread\"\r\n            Legs = [\r\n                    buildOptionLeg -1.0 strike2 expiry Call\r\n                    buildOptionLeg 1.0 strike1 expiry Call\r\n            ]\r\n            Stock = stock\r\n        }\r\n\r\n    let putSpread stock = \r\n        let strike1,strike2 = testStrikes stock\r\n        {\r\n            Name = \"Bull Put Spread\"\r\n            Legs = [\r\n                    buildOptionLeg -1.0 strike2 expiry Put\r\n                    buildOptionLeg 1.0 strike1 expiry Put\r\n            ]\r\n            Stock = stock\r\n        }\r\n\r\n    let strategiesForStock stock = [\r\n        longCall stock\r\n        shortCall stock\r\n        callSpread stock\r\n        putSpread stock\r\n        straddle stock\r\n        strangle stock\r\n        butterfly stock\r\n        riskReversal stock\r\n        collar stock\r\n        condor stock\r\n        boxOption stock\r\n        coveredCall stock\r\n    ]\r\n\r\n    let exampleStock = {\r\n        CurrentPrice = 100.0\r\n        Volatility = 0.05\r\n        Rate = 0.03\r\n    }\r\n    \r\n    let exampleStrategies = strategiesForStock exampleStock\r\n\r\n    let getStrategy name stock = \r\n        strategiesForStock stock |> Seq.find(fun s->s.Name = name)\r\n"]}