{"version":3,"sources":["../../../Pricer.Core/OptionsModel.fs"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIK;AAJL;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAIK;AAAA;AAAA,6BAGwB;AAAA;AAAI;AAH5B;;AAAA;AAAA;;AAKA,4CATL;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,KASK;;AAIA;AAbL;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAaK;AAAA;AAAA,6BASuB;AAAA,uBAAG,kBAAH;AAA8C;AATrE;AAAA;AAAA,6BAU0B;AAAA;AAAA,uCAAQ,8DAAR,EAAO,sCAAP;AAAoD;AAV9E;AAAA;AAAA,6BAWkB;AAAA;AAAA;AAAA;AAAA,sCAAQ,wCAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoB,yCAApB;AAAoB,qCAApB;AAAoB,iCAApB;AAAoB,6BAApB;AAAoB,yBAApB;AAAoB,qBAApB;AAAoB,iBAApB;AAA8D;AAXhF;;AAAA;AAAA;;AAaA,oCA1BL;AAAA;;AAAA;AAAA;AAAA,KA0BK;;AAKA,kDA/BL;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KA+BK;;AASA;AAxCL;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAwCK;AAAA;AAAA,6BAIwB;AAAA;AAAA,0IAGwB;AAAA;AAAA;AAAA,sCAAQ,wCAAR;AAAA;AAAA;AAAA;AAAoB,yBAApB;AAAoB,qBAApB;AAAoB,iBAApB,qBAHxB;AAAI;AAJ5B;;AAAA;AAAA;;AAQA,oCAhDL;AAAA;;AAAA;AAAA;AAAA,KAgDK;;AAKA,4BArDL;AAAA;;AAAA;AAAA;AAAA,KAqDK;;AAKA,sCA1DL;AAAA;;AAAA;AAAA;AAAA;AAAA,KA0DK;;AAMA,oCAhEL;AAAA;;AAAA;AAAA;AAAA,KAgEK;;AASA,8CAzEL;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,KAyEK;;AAIE;AACC,iDACM;AAAA;AAAA,yEAEW,IAAS,0BAFpB,OAEoB,0BAFpB,GACY,IAAS,0BADrB,OACqB,0BADrB;AAAW,SADjB;;AAKA,2CACA;AAAA;AAAA,0BAEW,sBAFX,iDAKY,2BALZ;AAOC,SARD;;AAND;AAMS,KANT","file":"OptionsModel.js","sourcesContent":["ï»¿namespace Pricer.Core\r\n\r\nopen System\r\n\r\ntype OptionKind =\r\n    | Call\r\n    | Put\r\n    member this.Name = match this with | Call -> \"Call\" | Put -> \"Put\"\r\n\r\ntype OptionStyle =\r\n    | American\r\n    | European\r\n\r\ntype OptionLeg =\r\n    {\r\n        Direction : float\r\n        Strike : float\r\n        Expiry : DateTime\r\n        Kind : OptionKind\r\n        Style: OptionStyle\r\n        PurchaseDate: DateTime\r\n    }\r\n    member this.BuyVsSell = if this.Direction < 0.0 then \"Sell\" else \"Buy\"\r\n    member this.TimeToExpiry = (float (this.Expiry - this.PurchaseDate).Days)/365.0\r\n    member this.Name = sprintf \"%s %s %.2f\" this.BuyVsSell this.Kind.Name this.Strike\r\n\r\ntype CashLeg = {\r\n    Direction: float\r\n    Price:float\r\n}\r\n\r\ntype ConvertibleLeg = {\r\n    Direction: float\r\n    Coupon: float\r\n    ConversionRatio: float\r\n    Maturity: DateTime\r\n    FaceValue: float\r\n    ReferencePrice: float\r\n}\r\n\r\ntype LegInfo =\r\n    | Cash of CashLeg\r\n    | Option of OptionLeg\r\n    | Convertible of ConvertibleLeg\r\n    member this.Name = match this with\r\n                            | Cash cl -> \"Cash\"\r\n                            | Option ol -> ol.Name\r\n                            | Convertible convert -> sprintf \"Convert %f\" convert.FaceValue\r\ntype Pricing = {\r\n    Delta: float\r\n    Premium: float\r\n}\r\n\r\ntype Leg = {\r\n    Definition:LegInfo\r\n    Pricing:Pricing option\r\n}\r\n\r\ntype Strategy = {\r\n    Stock : StockInfo\r\n    Name : String\r\n    Legs: Leg list\r\n}\r\n\r\ntype LegData = {\r\n    Leg:Leg\r\n    LegData: float*float list\r\n}\r\n\r\ntype SingleLine =  (float*float) list\r\n\r\ntype LegsData = Leg * SingleLine\r\n\r\ntype StrategyData = \r\n    | SingleYear of SingleLine * ((Leg * SingleLine) seq)\r\n    | MultiYear of SingleLine seq\r\n\r\nmodule BasicOptions = \r\n    let optionValue option stockPrice =\r\n        match option.Kind with\r\n                | Call -> max 0.0 (stockPrice - option.Strike)\r\n                | Put -> max 0.0 (option.Strike - stockPrice)\r\n\r\n    let buildLeg kind strike direction style expiry buyingDate =\r\n        {\r\n            Strike=strike\r\n            Kind = Call\r\n            Direction = direction\r\n            Expiry = expiry\r\n            Style = European\r\n            PurchaseDate = buyingDate\r\n        }\r\n\r\n\r\ntype IMathProvider = \r\n    abstract member cdf: float -> float\r\n\r\ntype IPricer =\r\n    abstract member priceOption: StockInfo -> OptionLeg -> Pricing\r\n    abstract member priceCash: CashLeg -> Pricing\r\n    abstract member priceConvert: StockInfo -> ConvertibleLeg -> Pricing"]}