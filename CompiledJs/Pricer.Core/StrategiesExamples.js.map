{"version":3,"sources":["../../../Pricer.Core/StrategiesExamples.fs"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;gBAOQ,WAAM,wBAAN,C,EAA8B,WAAM,wBAAN,C;;;AAG9B;AAAA,qCACiB,qCAAO,6DAKR,6CALQ,EAMD,qBANC,CAAP,EADjB;AAUC;;AApBT,kCAsBiB;AAAA;;AAAA;AAA0B,KAA1B,EAtBjB;;AAwBY;AAAmB;AAAnB;;AAGO,4CACC,2CAAkC,wCAAlC,CADD,EAEC,2CAAkC,uCAAlC,CAFD;;AAFX;AADoB;;AAWhB;AAAW;AAAX;;AAGO,4CACC,2CAAiC,wCAAjC,CADD,EAEC,2CAAiC,uCAAjC,CAFD;;AAFX;AADY;;AAWZ;AAAA;;AAEW,4CACC,kBAAoB,yBAApB,UAAoD,wCAApD,CADD,EAEC,mBAAqB,wBAArB,UAAoD,wCAApD,CAFD,EAGC,mBAAqB,wBAArB,UAAoD,wCAApD,CAHD,EAIC,kBAAoB,yBAApB,UAAoD,wCAApD,CAJD;;AAFX;AASC;;AAGD;AAAA;;AAEW,4CAEC,kBAAoB,wBAApB,UAAmD,wCAAnD,CAFD,EAIC,mBAAqB,wBAArB,UAAoD,uCAApD,CAJD;;AAFX;AASC;;AAEc;AAAA;;AAEJ,4CAEC,mBAAqB,wBAArB,UAAoD,wCAApD,CAFD,EAIC,kBAAoB,wBAApB,UAAmD,uCAAnD,CAJD,EAMC,sBACiB,mCAAK,gDAAL,EADjB,CAND;;AAFI;AAiBd;;AAGD;AAAA;;AAEW,4CAEC,mBAAqB,wBAArB,UAAoD,wCAApD,CAFD,EAIC,sBACiB,mCAAK,gDAAL,EADjB,CAJD;;AAFX;AAeC;;AAEuB;AAAA;AAAY;;AAGhC;AAAU,iCAAM,wBAAN;AACA,iCAAM,wBAAN;AACA;AACA;AAHV;;AAMO,4CACC,oCAAmC,wCAAnC,CADD,EAEC,mCAAkC,wCAAlC,CAFD,EAGC,oCAAmC,wCAAnC,CAHD,EAIC,mCAAkC,wCAAlC,CAJD;;AAFX;AAJW;;AAgBP;AAAmB;AAAnB;;AAGO,4CACC,2CAAkC,wCAAlC,CADD,EAEC,4CAAmC,wCAAnC,CAFD,EAGC,2CAAkC,wCAAlC,CAHD,EAIC,4CAAmC,wCAAnC,CAJD;;AAFX;AADoB;;AAYH;AAAA;;AAEV,4CACC,kBAAoB,wBAApB,UAAmD,wCAAnD,CADD;;AAFU;AAMpB;;AAEqB;AAAA;;AAEX,4CACC,mBAAqB,wBAArB,UAAoD,wCAApD,CADD;;AAFW;AAMrB;;AAGO;AAAkB;AAAlB;;AAGO,4CACC,4CAAmC,wCAAnC,CADD,EAEC,2CAAkC,wCAAlC,CAFD;;AAFX;AADmB;;AAWf;AAAkB;AAAlB;;AAGO,4CACC,4CAAmC,uCAAnC,CADD,EAEC,2CAAkC,uCAAlC,CAFD;;AAFX;AADmB;;AAUQ;AAAA,wCAC3B,eAD2B,EAE3B,gBAF2B,EAG3B,iBAH2B,EAI3B,gBAJ2B,EAK3B,eAL2B,EAM3B,eAN2B,EAO3B,gBAP2B,EAQ3B,mBAR2B,EAS3B,aAT2B,EAU3B,aAV2B,EAW3B,gBAX2B,EAY3B,kBAZ2B;AAa9B;;AA5LL,8CA8LuB;AAAA;AAAA;AAAA;AAIlB,KAJkB,EA9LvB;;AAAA,wDAoM4B,gCApM5B;;AAuMoC;AAAA,mCAAgB;AAAA;AAAA,SAAhB,EAA5B,yBAA4B;AAA6B","file":"StrategiesExamples.js","sourceRoot":"C:/dev/Pricer/Pricer.Fabled/CompiledJs/Pricer.Core","sourcesContent":["ï»¿namespace Pricer.Core\r\n\r\nopen System\r\n\r\nmodule StrategiesExamples = \r\n\r\n    let testStrikes stock =\r\n        floor(stock.CurrentPrice*1.1),floor(stock.CurrentPrice*1.4)\r\n\r\n    let buildOptionLeg direction strike expiry kind = \r\n        {\r\n            Definition = Option {\r\n                Direction = direction\r\n                Strike = strike\r\n                Expiry = expiry\r\n                Kind = kind\r\n                Style = European\r\n                PurchaseDate = DateTime.Now\r\n            }\r\n            Pricing = None\r\n        }\r\n\r\n    let expiry = DateTime.Now.AddDays(60.0)\r\n    let strangle stock = \r\n        let strike1, strike2 = testStrikes stock\r\n        {\r\n            Name = \"Long Strangle\"\r\n            Legs = [ \r\n                    buildOptionLeg 1.0 strike1 expiry Call\r\n                    buildOptionLeg 1.0 strike2 expiry Put\r\n            ]\r\n            Stock = stock\r\n        }\r\n\r\n    let straddle stock = \r\n        let strike,_ = testStrikes stock\r\n        {\r\n            Name = \"Straddle\"\r\n            Legs = [ \r\n                    buildOptionLeg 1.0 strike expiry Call\r\n                    buildOptionLeg 1.0 strike expiry Put\r\n            ]\r\n            Stock = stock\r\n        }\r\n\r\n    let butterfly stock = \r\n        {\r\n            Name = \"Butterfly\"\r\n            Legs = [ \r\n                    buildOptionLeg 1.0 (stock.CurrentPrice*1.05) expiry Call\r\n                    buildOptionLeg -1.0 (stock.CurrentPrice*1.1) expiry Call\r\n                    buildOptionLeg -1.0 (stock.CurrentPrice*1.1) expiry Call\r\n                    buildOptionLeg 1.0 (stock.CurrentPrice*1.15) expiry Call\r\n            ]\r\n            Stock = stock\r\n        }\r\n\r\n    let riskReversal stock = \r\n        {\r\n            Name = \"Risk Reversal\"\r\n            Legs = [ \r\n                    //out of the money call\r\n                    buildOptionLeg 1.0 (stock.CurrentPrice*1.1) expiry Call\r\n                    //out of the money put\r\n                    buildOptionLeg -1.0 (stock.CurrentPrice*0.9) expiry Put\r\n            ]\r\n            Stock = stock\r\n        }\r\n\r\n    let collar stock = {\r\n            Name = \"Collar\"\r\n            Legs = [ \r\n                    //sell 1 out of money call\r\n                    buildOptionLeg -1.0 (stock.CurrentPrice*1.2) expiry Call\r\n                    //buy 1 out of money put\r\n                    buildOptionLeg 1.0 (stock.CurrentPrice*0.8) expiry Put\r\n                    //long some shares\r\n                    {\r\n                        Definition = Cash { \r\n                            Direction = 1.0\r\n                            Price = stock.CurrentPrice\r\n                        }\r\n                        Pricing = None\r\n                    }\r\n            ]\r\n            Stock = stock\r\n        }\r\n\r\n    let coveredCall stock = \r\n        {\r\n            Name = \"Covered Call\"\r\n            Legs = [ \r\n                    //sell 1 out of money call\r\n                    buildOptionLeg -1.0 (stock.CurrentPrice*1.2) expiry Call\r\n                    //long some shares\r\n                    {\r\n                        Definition = Cash { \r\n                            Direction = 1.0\r\n                            Price = stock.CurrentPrice\r\n                        }\r\n                        Pricing = None\r\n                    }\r\n            ]\r\n            Stock = stock\r\n        }\r\n\r\n    let cashPayOff strike ref = ref - strike\r\n\r\n    let condor stock = \r\n        let strike1 = floor(stock.CurrentPrice*0.6)\r\n        let strike2 = floor(stock.CurrentPrice*0.9)\r\n        let strike3 = floor stock.CurrentPrice*1.1\r\n        let strike4 = floor stock.CurrentPrice*1.4\r\n        {\r\n            Name = \"Condor\"\r\n            Legs = [ \r\n                    buildOptionLeg -1.0 strike2 expiry Call\r\n                    buildOptionLeg 1.0 strike1 expiry Call\r\n                    buildOptionLeg -1.0 strike3 expiry Call\r\n                    buildOptionLeg 1.0 strike4 expiry Call\r\n            ]\r\n            Stock = stock\r\n        }\r\n\r\n    let boxOption stock = \r\n        let strike1, strike2 = testStrikes stock\r\n        {\r\n            Name = \"Box Option\"\r\n            Legs = [ \r\n                    buildOptionLeg 1.0 strike1 expiry Call\r\n                    buildOptionLeg -1.0 strike2 expiry Call\r\n                    buildOptionLeg 1.0 strike2 expiry Call\r\n                    buildOptionLeg -1.0 strike1 expiry Call\r\n            ]\r\n            Stock = stock\r\n    }\r\n\r\n    let longCall stock = {\r\n        Name = \"Long Call - Out Of Money\"\r\n        Legs = [\r\n                buildOptionLeg 1.0 (stock.CurrentPrice*1.2) expiry Call\r\n        ]\r\n        Stock = stock\r\n    }\r\n\r\n    let shortCall stock = {\r\n        Name = \"Short Call - Out Of Money\"\r\n        Legs = [\r\n                buildOptionLeg -1.0 (stock.CurrentPrice*1.2) expiry Call\r\n        ]\r\n        Stock = stock\r\n    }\r\n\r\n    let callSpread stock = \r\n        let strike1,strike2 = testStrikes stock\r\n        {\r\n            Name = \"Bull Call Spread\"\r\n            Legs = [\r\n                    buildOptionLeg -1.0 strike2 expiry Call\r\n                    buildOptionLeg 1.0 strike1 expiry Call\r\n            ]\r\n            Stock = stock\r\n        }\r\n\r\n    let putSpread stock = \r\n        let strike1,strike2 = testStrikes stock\r\n        {\r\n            Name = \"Bull Put Spread\"\r\n            Legs = [\r\n                    buildOptionLeg -1.0 strike2 expiry Put\r\n                    buildOptionLeg 1.0 strike1 expiry Put\r\n            ]\r\n            Stock = stock\r\n        }\r\n\r\n    let strategiesForStock stock = [\r\n        longCall stock\r\n        shortCall stock\r\n        callSpread stock\r\n        putSpread stock\r\n        straddle stock\r\n        strangle stock\r\n        butterfly stock\r\n        riskReversal stock\r\n        collar stock\r\n        condor stock\r\n        boxOption stock\r\n        coveredCall stock\r\n    ]\r\n\r\n    let exampleStock = {\r\n        CurrentPrice = 100.0\r\n        Volatility = 0.05\r\n        Rate = 0.03\r\n    }\r\n    \r\n    let exampleStrategies = strategiesForStock exampleStock\r\n\r\n    let getStrategy name stock = \r\n        strategiesForStock stock |> Seq.find(fun s->s.Name = name)\r\n"]}